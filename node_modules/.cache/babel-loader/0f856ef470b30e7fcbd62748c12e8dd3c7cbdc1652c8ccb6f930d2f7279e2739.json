{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ikomi\\\\course-connect\\\\src\\\\components\\\\CampusMap.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buildings = [{\n  id: 'A',\n  name: 'Building A',\n  x: 50,\n  y: 50,\n  width: 100,\n  height: 100,\n  color: '#999999'\n}, {\n  id: 'B',\n  name: 'Building B',\n  x: 200,\n  y: 50,\n  width: 120,\n  height: 100,\n  color: '#bbbbbb'\n}, {\n  id: 'C',\n  name: 'Building C',\n  x: 50,\n  y: 200,\n  width: 150,\n  height: 100,\n  color: '#cccccc'\n}];\nconst streets = [{\n  x1: 0,\n  y1: 100,\n  x2: 400,\n  y2: 100\n},\n// Horizontal street\n{\n  x1: 100,\n  y1: 0,\n  x2: 100,\n  y2: 400\n},\n// Vertical street\n{\n  x1: 200,\n  y1: 0,\n  x2: 200,\n  y2: 400\n} // Vertical street\n];\nconst CampusMap = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    viewBox: \"0 0 400 400\",\n    style: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#cccccc'\n    },\n    children: [streets.map((street, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: street.x1,\n      y1: street.y1,\n      x2: street.x2,\n      y2: street.y2,\n      stroke: \"#ffffff\",\n      strokeWidth: \"4\",\n      strokeDasharray: \"6\" // Dashed lines for street effect\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)), buildings.map(building => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: building.x,\n        y: building.y,\n        width: building.width,\n        height: building.height,\n        fill: building.color,\n        stroke: \"#000\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: building.x + building.width / 2,\n        y: building.y + building.height / 2,\n        textAnchor: \"middle\",\n        dominantBaseline: \"middle\",\n        fill: \"#000\",\n        fontSize: \"16\",\n        fontWeight: \"bold\",\n        children: building.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, building.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = CampusMap;\nexport default CampusMap;\nvar _c;\n$RefreshReg$(_c, \"CampusMap\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","buildings","id","name","x","y","width","height","color","streets","x1","y1","x2","y2","CampusMap","viewBox","style","backgroundColor","children","map","street","index","stroke","strokeWidth","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","building","fill","textAnchor","dominantBaseline","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/ikomi/course-connect/src/components/CampusMap.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst buildings = [\r\n    { id: 'A', name: 'Building A', x: 50, y: 50, width: 100, height: 100, color: '#999999' },\r\n    { id: 'B', name: 'Building B', x: 200, y: 50, width: 120, height: 100, color: '#bbbbbb' },\r\n    { id: 'C', name: 'Building C', x: 50, y: 200, width: 150, height: 100, color: '#cccccc' },\r\n];\r\n\r\nconst streets = [\r\n    { x1: 0, y1: 100, x2: 400, y2: 100 }, // Horizontal street\r\n    { x1: 100, y1: 0, x2: 100, y2: 400 }, // Vertical street\r\n    { x1: 200, y1: 0, x2: 200, y2: 400 }, // Vertical street\r\n];\r\n\r\nconst CampusMap = () => {\r\n    return (\r\n        <svg\r\n            viewBox=\"0 0 400 400\"\r\n            style={{ width: '100%', height: '100%', backgroundColor: '#cccccc' }}\r\n        >\r\n            {/* Render streets */}\r\n            {streets.map((street, index) => (\r\n                <line\r\n                    key={index}\r\n                    x1={street.x1}\r\n                    y1={street.y1}\r\n                    x2={street.x2}\r\n                    y2={street.y2}\r\n                    stroke=\"#ffffff\"\r\n                    strokeWidth=\"4\"\r\n                    strokeDasharray=\"6\" // Dashed lines for street effect\r\n                />\r\n            ))}\r\n\r\n            {/* Render buildings */}\r\n            {buildings.map((building) => (\r\n                <g key={building.id}>\r\n                    {/* Building Block */}\r\n                    <rect\r\n                        x={building.x}\r\n                        y={building.y}\r\n                        width={building.width}\r\n                        height={building.height}\r\n                        fill={building.color}\r\n                        stroke=\"#000\"\r\n                        strokeWidth=\"2\"\r\n                    />\r\n                    {/* Building Label */}\r\n                    <text\r\n                        x={building.x + building.width / 2}\r\n                        y={building.y + building.height / 2}\r\n                        textAnchor=\"middle\"\r\n                        dominantBaseline=\"middle\"\r\n                        fill=\"#000\"\r\n                        fontSize=\"16\"\r\n                        fontWeight=\"bold\"\r\n                    >\r\n                        {building.id}\r\n                    </text>\r\n                </g>\r\n            ))}\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default CampusMap;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}